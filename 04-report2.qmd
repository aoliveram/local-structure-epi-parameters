---
format: html
title: Sunbelt 2023 presentation
subtitle: "Differences in differences in network statistics"
embed-resources: true
execute: 
  warning: false
---

## Pairwise comparisons with the original network

We first reload the original data to take the raw values

```{r}
#| echo: false
library(data.table)
library(ggplot2)
simstats <- fread("data/02-dataprep-network-stats.csv.gz")

# Removing cases with 0 transmission
simstats <- simstats[peak_preval > 1]

# Adjust factor (approx)
adj <- nrow(simstats) / 20000

summRt <- function(val) {

  # Subset of the data only using val and nettype
  dat <- simstats[, .SD, .SDcols = c(val, "nettype")]

  dat[, c(as.list(
    quantile(.SD[[1]], probs = c(.025, .5,.975), na.rm = TRUE)),
    list(
      avg = mean(.SD[[1]], na.rm = TRUE) * ifelse(
        grepl("(^rt|preval$)", val), adj, 1),
      n   = .N
    )),
  by = "nettype", .SDcols = val] |>
  knitr::kable(
    caption = sprintf("%s at day 0 by network type", val),
    digits = 2
    ) |>print()

  # Replicating the ER network
  ntypes <- setdiff(dat[, unique(nettype)], "ergm")
  dat_ergm <- data.table::copy(dat[nettype == "ergm", .SD, .SDcols = val])

  dat <- dat[nettype != "ergm"]
  dat[, is_ergm := "no"]
  dat_ergm[, is_ergm := "yes"]

  for (nty in ntypes) {
    dat <- rbindlist(list(
      dat, 
      dat_ergm[, nettype := nty]
      ), use.names = TRUE)
  }

  ans <- ggplot(dat, aes(x = dat[[val]])) +
    geom_histogram(aes(fill = is_ergm), alpha = .7) +
    facet_wrap(~nettype, ncol = 2) +
    theme_bw() #+
    # theme(legend.position = "none")

  ans

}
```

Here are the variables we are interested in

```{r}
# Dependent variables
depvars <- c("peak_time", "peak_preval", "rt", "rt_mean", "dispersion", "gentime")

# Independent variables
indepvars <- c("inc_days", "recovery_rate", "transmission_rate")

# Listing variables starting with ergm and igraph separately
ergmvars <- grep("^ergm", names(simstats), value = TRUE)
igraphvars <- grep("^igraph", names(simstats), value = TRUE)
```

# Differences between network types

::: {.panel-tabset}

## Peak time

There's no much diversity in peak time for the different network types

```{r}
#| echo: false
#| label: peak-time
summRt("peak_time")
```

## Peak prevalence

```{r}
summRt("peak_preval")
```

## Generation time

```{r}
#| label: gentime
#| echo: false
summRt("gentime")
```

Scale-free networks show a higher generation time than ERGM networks.

## Dispersion

```{r}
#| label: dispersion
#| echo: false
summRt("dispersion")
```

We do observe a lower dispersion in scale-free networks compared to the ERGM networks.

## Final prevalence

```{r}
#| label: final-preval
#| echo: false
summRt("final_preval")
```

:::

# Reproductive number

::: {.panel-tabset}

## Average

```{r}
#| label: r0-avg
#| echo: false
summRt("rt")
```

## Day 0

```{r}
#| label: r0-day0
#| echo: false
summRt("rt_0")
```

## Day 1

```{r}
#| label: r0-day1
#| echo: false
summRt("rt_1")
```

## Day 2

```{r}
#| label: r0-day2
#| echo: false
summRt("rt_2")
```

## Day 3

```{r}
#| label: r0-day3
#| echo: false
summRt("rt_3")
```

## Day 4

```{r}
#| label: r0-day4
#| echo: false
summRt("rt_4")
```

:::

# Pairwise association between graph structures and outcomes

::: {.panel-tabset}

## Peak time

```{r}
#| label: pairwise-ergm

```

:::

Plot showing the distribution of each ergmvars using an histogram

```{r}

```



# Data processing

We now create a function to compute the average for nettype == ergm

```{r}
ergmdat <- simstats[, lapply(.SD, mean), by = .(nettype), .SDcols = c(ergmvars, igraphvars, depvars, indepvars)]

# Appending the ergm name to the columnnames
setnames(ergmdat, old = names(ergmdat), new = paste0(names(ergmdat), "_ergm"))

# Except the nettye column
setnames(ergmdat, old = "nettype_ergm", new = "nettype")

# Merging the data
simstats <- merge(
  simstats[nettype != "ergm"],
  ergmdat, by = "nettype"
  )
```

We now calculate the pairwise differences

```{r} 
# For each var in c(ergmvars, igraphvars, depvars), compute the difference
# with the variable of the same name but appended with _ergm
for (var in c(ergmvars, igraphvars, depvars, indepvars)) {
  simstats[, paste0(var, "_diff") := get(paste0(var, "_ergm")) - get(var)]
}

```

# Regression Analyses


```{r}
#| eval: true
# For now, excluding igraph_avg_closeness_diff.
# It is usually zero b/c of degseq (has isolates)
igraphvars <- setdiff(igraphvars, "igraph_avg_closeness")

# Creating formula, one for each devpar+"_diff" using ergmvars+"diff" and igraphvars+"diff"
# as independent variables
formulas <- lapply(depvars, function(x) 
  as.formula(
    paste0(
      x, "_diff ~ I(factor(nettype)) + ", 
      paste0(indepvars, "_diff", collapse = "+"), "+",
      paste0(ergmvars, "_diff", collapse = "+")  , "+",
      paste0(igraphvars, "_diff", collapse = "+")
      )
      ))

# Scaling _diff variables in simstats
simstats[, paste0(ergmvars, "_diff") := lapply(.SD, scale, scale = TRUE), .SDcols = paste0(ergmvars, "_diff")]
simstats[, paste0(igraphvars, "_diff") := lapply(.SD, scale, scale = TRUE), .SDcols = paste0(igraphvars, "_diff")]
simstats[, paste0(depvars, "_diff") := lapply(.SD, scale, scale = TRUE), .SDcols = paste0(depvars, "_diff")]

# Fitting the models
models <- lapply(formulas[1:4], function(x) lm(x, data = simstats))
```



# Table 1

::: {style="font-size: 70%"}

```{r}
#| results: "asis"
#| eval: true
# library(stargazer)
# stargazer(models, type = "text", omit.stat = c("f", "ser"), omit.table.layout = "n")
texreg::knitreg(
  setNames(
    models, 
    depvars[1:4]
  ), single.row = TRUE)
```

:::